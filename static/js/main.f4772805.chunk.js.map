{"version":3,"sources":["content.js","components/test/SingleQuestion.js","components/pages/Question.js","components/pages/Introduction.js","App.js","serviceWorker.js","index.js"],"names":["content","index","question","answers","text","scores","사교","토론","혼독","숙제","낭독","기록","책청년","책른","책린이","Wrapper","styled","div","SingleQuestion","props","class","questionText","answerOptions","map","answer","id","onClick","onAnswerSelect","Question","state","questionCounter","questionIndex","answerText","stats","result","handleAnswerSelect","bind","this","setState","console","log","Object","keys","forEach","key","applyAnswer","newCount","newQuestionIndex","setAnswer","length","setNextQuestion","JSON","stringify","statsList","sort","first","second","questionTotal","Component","Introduction","title","_onStartTest","App","showQuestion","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f4772805.chunk.js","sourcesContent":["var content = [\n    {\n        index: 1,\n        question: '너무 마음에 드는 책을 발견한 당신.',\n        answers: [\n            {\n                index: 1,\n                text: '다른 사람들에게 추천해준다',\n                scores: {\n                    사교: 1.0,\n                    토론: 0.5,\n                }\n            },\n            {\n                index: 2,\n                text: '이 책을 이제서야 발견했다니! 저자의 다른 책도 찾아본다',\n                scores: {\n                    혼독: 1.0,\n                    숙제: 0.7\n                }\n            }\n        ]\n    },\n    {\n        index: 2,\n        question: '책에서 가슴을 울리는 문구를 찾은 당신.',\n        answers: [\n            {\n                index: 1,\n                text: '좋은 건 널리널리! 사진을 찍어 개인 SNS에 공유한다',\n                scores: {\n                    사교: 1.0,\n                    낭독: 0.5,\n                    토론: 0.3\n                }\n            },\n            {\n                index: 2,\n                text: '내 마음에만 담아둔다',\n                scores: {\n                    혼독: 1.0,\n                    기록: 0.7\n                }\n            }\n        ]\n    },\n    {\n        index: 3,\n        question: '소개팅에서 좋아하는 책이 뭐냐고 묻는 상대방.',\n        answers: [\n            {\n                index: 1,\n                text: '신나서 책 이야기를 한다',\n                scores: {\n                    책청년: 1.0,\n                    책른: 1.0\n                }\n            },\n            {\n                index: 2,\n                text: '최근에 읽은 책이 뭐였지... 기억을 쥐어짜내본다',\n                scores: {\n                    책린이: 2.0,\n                }\n            }\n        ]\n    },\n    {\n        index: 4,\n        question: '친구와 우연히도 같은 책을 읽고 있는걸 알게 된 당신.',\n        answers: [\n            {\n                index: 1,\n                text: '같이 읽자고 제안한다',\n                scores: {\n                    사교: 0.5,\n                    낭독: 1.0,\n                    토론: 0.3\n                }\n            },\n            {\n                index: 2,\n                text: '혼자 읽는다',\n                scores: {\n                    혼독: 1.0,\n                    숙제: 1.0\n                }\n            }\n        ]\n    },\n    {\n        index: 5,\n        question: '친구가 하루 독서 할당량을 못 채우면 벌금을 내자고 한다.',\n        answers: [\n            {\n                index: 1,\n                text: '부담이다, 그렇게까지 의무감으로 읽긴 싫어',\n                scores: {\n                    혼독: 1.0\n                }\n            },\n            {\n                index: 2,\n                text: '좋아! 동기부여가 돼! 더 열심히 읽을 수 있을 거 같아',\n                scores: {\n                    사교: 1.0,\n                    숙제: 0.5\n                }\n            }\n        ]\n    },\n    {\n        index: 6,\n        question: '주변에서 강력 추천 받은 넷플릭스. 막상 시작했는데 첫화부터 재미가 없다.',\n        answers: [\n            {\n                index: 1,\n                text: '언젠가는 재밌겠지... 끝까지 본다',\n                scores: {\n                    토론: 0.7,\n                    숙제: 0.5\n                }\n            },\n            {\n                index: 2,\n                text: '바로 끄고 다른 시리즈를 찾아본다',\n                scores: {\n                }\n            }\n        ]\n    },\n    {\n        index: 7,\n        question: '나의 독서량은?',\n        answers: [\n            {\n                index: 1,\n                text: '한 달에 세 권 이하',\n                scores: {\n                    책린이: 1.0,\n                    책청년: 2.0\n                }\n            },\n            {\n                index: 2,\n                text: '한 달에 책 세 권 이상',\n                scores: {\n                    책른: 2.0\n                }\n            }\n        ]\n    },\n    {\n        index: 8,\n        question: '서점에 간 당신.',\n        answers: [\n            {\n                index: 1,\n                text: '베스트셀러를 둘러보며 재밌어 보이는 책들을 구경한다',\n                scores: {\n                    사교: 0.5,\n                    토론: 0.5,\n                }\n            },\n            {\n                index: 2,\n                text: '검색대에서 미리 생각해뒀던 책을 찾는다',\n                scores: {\n                    기록: 0.5,\n                    숙제: 1.0\n                }\n            }\n        ]\n    },\n    {\n        index: 9,\n        question: '친구들과 노래방에 간 당신.',\n        answers: [\n            {\n                index: 1,\n                text: '마이크는 내꺼! 익숙한 노래가 나오면 무조건 부르고 본다',\n                scores: {\n                    낭독: 1.0\n                }\n            },\n            {\n                index: 2,\n                text: '아는 노래가 나와도 내가 예약한 곡이 아니면 옆에서 흥만 돋군다',\n                scores: {\n                    사교: 0.5,\n                    토론: 0.5\n                }\n            }\n        ]\n    },\n    {\n        index: 10,\n        question: '친구와의 갈등을 해결하는 방법은?',\n        answers: [\n            {\n                index: 1,\n                text: '일기장에 생각을 쓰고 혼자 감정을 정리한다',\n                scores: {\n                    혼독: 0.5,\n                    기록: 1.0\n                }\n            },\n            {\n                index: 2,\n                text: '말로 해결한다',\n                scores: {\n                    사교: 0.5,\n                    토론: 1.0\n                }\n            }\n        ]\n    },\n    {\n        index: 11,\n        question: '선호하는 연락 방법은?',\n        answers: [\n            {\n                index: 1,\n                text: '문자',\n                scores: {\n                    기록: 1.0\n                }\n            },\n            {\n                index: 2,\n                text: '통화',\n                scores: {\n                    낭독: 1.0,\n                    토론: 0.5\n                }\n            }\n        ]\n    },\n    {\n        index: 12,\n        question: '낯선 곳으로 여행을 가게 된 당신.',\n        answers: [\n            {\n                index: 1,\n                text: '여행 전 미리 짜놓은 계획대로 움직인다',\n                scores: {\n                    기록: 0.5,\n                    숙제: 1.0\n                }\n            },\n            {\n                index: 2,\n                text: '계획 없이 즉흥적으로 움직인다',\n                scores: {\n                    혼독: 1.0,\n                }\n            }\n        ]\n    },\n    {\n        index: 13,\n        question: '팀플에서 담당하고 싶은 업무는?',\n        answers: [\n            {\n                index: 1,\n                text: '발표',\n                scores: {\n                    낭독: 1.0,\n                }\n            },\n            {\n                index: 2,\n                text: '리서치',\n                scores: {\n                    기록: 1.0,\n                    숙제: 0.7\n                }\n            }\n        ]\n    }\n]\n\nexport default content","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n.question-text {\n    text-align: center;\n    font-size: x-large;\n    width: 100%;\n}\n.answer-button {\n    padding: 10px 20px;\n    width: 100%;\n    border-radius: 5px;\n    background-color: seashell;\n    border: none;\n    color: black;\n}\n\n.answer-text {\n    font-size: large\n}\n`\n\nconst SingleQuestion = props => {\n    const renderOption = answer => {\n        const handleSelected = () => {\n            props.onAnswerSelect(answer)\n        }\n        return (\n            <div>\n                <button\n                    id={answer.index}\n                    onClick={handleSelected}\n                    class='answer-button'\n                ><span class='answer-text'>{answer.text}</span></button>\n            </div>\n        )\n    }\n    return (\n        <Wrapper>\n            <h1 class='question-text'>{props.questionText}</h1>\n            <div>\n                {props.answerOptions.map(renderOption)}\n            </div>\n        </Wrapper>\n    )\n}\n\nexport default SingleQuestion","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport content from '../../content'\nimport SingleQuestion from '../test/SingleQuestion'\n\nconst Wrapper = styled.div`\n.container {\n    position: absolute;\n    top: calc(50vh - 100px);\n    left: 25vw;\n    width: 50vw;\n}\n.result-text {\n    font-size: xx-large\n}\n.result-list {\n    font-size: large\n}\n`\n\nclass Question extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            questionCounter: 0,\n            questionIndex: 1,\n            questionText: '',\n            answerOptions: [],\n            answer: null,\n            answerText: '',\n            stats: {\n                사교: 0.,\n                낭독: 0.,\n                혼독: 0.,\n                토론: 0.,\n                기록: 0.,\n                숙제: 0.,\n                책린이: 0.,\n                책청년: 0.,\n                책른: 0.,\n            },\n            result: ''\n        }\n        this.handleAnswerSelect = this.handleAnswerSelect.bind(this)\n    }\n\n    componentWillMount() {\n        this.setState({\n            questionText: content[0].question,\n            answerOptions: content[0].answers\n        })\n    }\n\n    setAnswer(answer) {\n        console.log(answer.scores)\n        const stats = this.state.stats\n        let applyAnswer = answer => {\n            Object.keys(answer.scores).forEach(function (key) {\n                stats[key] += answer.scores[key]\n            })\n            return stats\n        }\n        this.setState({\n            answer: answer.text,\n            stats: applyAnswer(answer)\n        })\n    }\n\n    setNextQuestion() {\n        const newCount = this.state.questionCounter + 1\n        const newQuestionIndex = this.state.questionIndex + 1\n        this.setState({\n            questionCounter: newCount,\n            questionIndex: newQuestionIndex,\n            questionText: content[newCount].question,\n            answerOptions: content[newCount].answers,\n            answer: null,\n            answerText: ''\n        })\n    }\n\n    handleAnswerSelect(answer) {\n        this.setAnswer(answer)\n        if (this.state.questionIndex < content.length) {\n            this.setNextQuestion()\n        } else {\n            const result = JSON.stringify(this.state.stats)\n            this.setState({ result: result })\n        }\n    }\n\n    render() {\n        if (this.state.result) {\n            const stats = this.state.stats\n            var statsList = Object.keys(stats).map(function (key) {\n                return [key, stats[key]];\n            });\n            statsList.sort(function (first, second) {\n                return second[1] - first[1];\n            });\n\n            return (\n                <Wrapper >\n                    <div class='container'>\n                        <h1 class='result-text'>당신의 독서 스타일은?</h1>\n                        <ol>\n                            <li>{statsList[0][0]}</li>\n                            <li>{statsList[1][0]}</li>\n                            <li>{statsList[2][0]}</li>\n                        </ol>\n                    </div>\n                </Wrapper>\n            )\n        }\n        else {\n            return (\n                <Wrapper>\n                    <div class='container'>\n                        <SingleQuestion\n                            answerText={this.state.answerText}\n                            answerOptions={this.state.answerOptions}\n                            questionIndex={this.state.questionIndex}\n                            questionText={this.state.questionText}\n                            questionTotal={content.length}\n                            onAnswerSelect={this.handleAnswerSelect}\n                        />\n                    </div>\n                </Wrapper>\n            )\n        }\n    }\n\n}\n\nexport default Question","import React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.div`\n.container {\n    position: absolute;\n    top: calc(50vh - 100px);\n    left: 25vw;\n    width: 50vw;\n}\n.title-text {\n    font-size: xx-large\n}\n.start-button {\n    font-size: large;\n    padding: 10px 20px;\n    border-radius: 5px;\n    background-color: seashell;\n    border: none;\n}\n`\n\nconst Introduction = ({ title, _onStartTest }) => {\n    return (\n        <Wrapper>\n            <div class='container'>\n                <h1 class='title-text'>{title}</h1>\n                <button class='start-button' onClick={_onStartTest}>\n                    <span>테스트 시작하기</span>\n                </button>\n            </div>\n        </Wrapper>\n    )\n\n}\n\nexport default Introduction","import React, { Component } from 'react';\nimport Question from './components/pages/Question'\nimport Introduction from './components/pages/Introduction'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      showQuestion: false\n    }\n    this._onStartTest = this._onStartTest.bind(this)\n  }\n\n  _onStartTest() {\n    this.setState({ showQuestion: !this.showQuestion})\n  }\n\n  render() {\n    if (this.state.showQuestion) {\n      return <Question />\n    } else {\n      return <Introduction title='책취테스트' _onStartTest={this._onStartTest} />\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}